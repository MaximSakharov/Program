#pragma once

#ifndef _FUNCTIONS_H_
#define _FUNCTIONS_H_

/*
@brief Возводит число в квадрат.
@param value_ : Число.
@return Квадрат числа.
*/
unsigned long long Square(const long long value_);

#endif //!_FUNCTIONS_H_

#ifndef _FUNCTIONS_H_
#define _FUNCTIONS_H_

/*
@brief проверяет простоту чиста
@param value_ : Число.
@return простое ли число
*/

unsigned long long Is_Prime(unsigned const long long value_);

#endif //!_FUNCTIONS_H_

#ifndef _FUNCTIONS_H_
#define _FUNCTIONS_H_

/*
@brief Проверяет является ли Палиндромом.
@param value_ : Число.
@return Является ли Палиндромом.
*/
unsigned long long isPalindrom(const long long value_);

#endif //!_FUNCTIONS_H_

#ifndef _FUNCTIONS_H_
#define _FUNCTIONS_H_

/*
@brief Проверяет является ли Палиндромом.
@param value_ : Число.
@return Является ли Палиндромом.
*/
unsigned long long Reverse(const long long value_);

#endif //!_FUNCTIONS_H_

#ifndef _FUNCTIONS_H_
#define _FUNCTIONS_H_

/*
@brief Проверает деление нацело от 1 до введённого делителя
@param value_: Делимое число
@param divider_: Последнее число, на которое делится делимое
@return Делится ли на число от 1 до введённого делителя
*/
unsigned long long isDivisionTo(const long long value_, const int divider_);

#endif //!_FUNCTIONS_H_